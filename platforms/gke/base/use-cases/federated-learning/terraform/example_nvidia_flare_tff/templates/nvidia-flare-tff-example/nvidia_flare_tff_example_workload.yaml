# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nvflare-configmap-${nvidia_flare_tff_example_workload_name}
  namespace: ${namespace_name}
data:
  nvflare-config-file-name: ${nvidia_flare_tff_example_config_file_name}
  nvflare-python_module_name: ${nvidia_flare_tff_example_python_module_name}
  site: ${nvidia_flare_tff_example_site_name}
---
apiVersion: v1
kind: Service
metadata:
  name: ${nvidia_flare_tff_example_workload_name}
  namespace: ${namespace_name}
  labels:
    run: nvflare-${nvidia_flare_tff_example_workload_name}
spec:
  ports:
    - port: 8002
      protocol: TCP
      targetPort: 8002
      name: tcp-flport
    - port: 8003
      protocol: TCP
      targetPort: 8003
      name: tcp-adminport
  selector:
    run: nvflare-${nvidia_flare_tff_example_workload_name}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nvflare-${nvidia_flare_tff_example_workload_name}
  namespace: ${namespace_name}
  labels:
    run: nvflare-${nvidia_flare_tff_example_workload_name}
spec:
  replicas: 1
  selector:
    matchLabels:
      run: nvflare-${nvidia_flare_tff_example_workload_name}
  template:
    metadata:
      labels:
        run: nvflare-${nvidia_flare_tff_example_workload_name}
      annotations:
        gke-gcsfuse/volumes: "true"
        proxy.istio.io/config: '{ "holdApplicationUntilProxyStarts": true }'
    spec:
      containers:
        - name: nvflare
          image: ${federated_learning_nvidia_flare_tff_example_localized_container_image_id}:${federated_learning_nvidia_flare_tff_example_container_image_tag}
          imagePullPolicy: Always
          securityContext:
            runAsNonRoot: true
            runAsUser: 10000
            runAsGroup: 10000
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          command:
            - /usr/local/bin/python3
          args:
            - -u
            - -m
            - $(NVFLARE_PYTHON_MODULE_NAME)
            - -m
            - /workspace/nvfl/workspace/example_project/prod_00/$(SITE)
            - -s
            - $(NVFLARE_CONFIG_FILE_NAME)
            - --set
            - secure_train=true
            - uid=$(SITE)
            - config_folder=config
            - org=nvidia
          env:
            - name: SITE
              valueFrom:
                configMapKeyRef:
                  key: site
                  name: nvflare-configmap-${nvidia_flare_tff_example_workload_name}
            - name: NVFLARE_CONFIG_FILE_NAME
              valueFrom:
                configMapKeyRef:
                  key: nvflare-config-file-name
                  name: nvflare-configmap-${nvidia_flare_tff_example_workload_name}
            - name: NVFLARE_PYTHON_MODULE_NAME
              valueFrom:
                configMapKeyRef:
                  key: nvflare-python_module_name
                  name: nvflare-configmap-${nvidia_flare_tff_example_workload_name}
          resources:
            requests:
              cpu: "1"
              memory: "1Gi"
            limits:
              cpu: "1"
              memory: "1Gi"
          volumeMounts:
            - name: nvfl-ephemeral
              mountPath: /workspace/nvfl/
      serviceAccountName: ${tenant_apps_kubernetes_service_account_name}
      volumes:
        - name: nvfl-ephemeral
          csi:
            driver: gcsfuse.csi.storage.gke.io
            volumeAttributes:
              bucketName: "${federated_learning_nvidia_flare_tff_example_bucket_name}"
              mountOptions: "implicit-dirs,uid=10000,gid=10000,file-mode=664,dir-mode=775"
              gcsfuseLoggingSeverity: trace
      securityContext:
        fsGroup: 10000
