# Copyright 2025 Google LLC

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

# https://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: batch/v1
kind: Job
metadata:
  name: transfer-llama-to-gcs
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
        app: transfer-llama-to-gcs
      annotations: 
        cluster-autoscaler.kubernetes.io/consume-provisioning-request: a100-gcs-transfer-job
        cluster-autoscaler.kubernetes.io/provisioning-class-name: "queued-provisioning.gke.io"  
    spec:
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: "true"
      restartPolicy: Never
      terminationGracePeriodSeconds: 0
      serviceAccountName: ${MLP_STORAGE_BENCHMARKING_KSA}
      containers:
      - name: transfer-llama-to-gcs
        image: google/cloud-sdk:502.0.0-slim
        command:
        - sh
        - -c
        - |
          gcloud config set storage/parallel_composite_upload_enabled False
          pip3 install -U "huggingface_hub[cli]==0.26.2" --break-system-packages
          huggingface-cli download --repo-type model $(MODEL_REPO) --local-dir /local/temp --token $(HF_TOKEN)
          gcloud storage cp -R /local/temp/* \
            gs://$(MLP_STORAGE_BENCHMARK_FLAT_BUCKET)/$(MODEL_REPO)
          gcloud storage cp -R /local/temp/* \
            gs://$(MLP_STORAGE_BENCHMARK_HIERARCHICAL_BUCKET)/$(MODEL_REPO)  
        env:
        - name: MODEL_REPO
          value: ${MODEL_REPO}
        - name: MLP_STORAGE_BENCHMARK_HIERARCHICAL_BUCKET
          value: ${MLP_STORAGE_BENCHMARK_HIERARCHICAL_BUCKET}
        - name: MLP_STORAGE_BENCHMARK_FLAT_BUCKET
          value: ${MLP_STORAGE_BENCHMARK_FLAT_BUCKET}
        - name: HF_TOKEN
          valueFrom:
            secretKeyRef:
              name: hf-secret
              key: HF_TOKEN  
        volumeMounts:
        - mountPath: /dev/shm
          name: dshm
        - mountPath: /local
          name: local
      tolerations:
      - key: "nvidia.com/gpu"
        operator: "Exists"
        effect: "NoSchedule"
      - key: "on-demand"
        value: "true"
        operator: "Equal"
        effect: "NoSchedule" 
      volumes:
      - name: dshm
        emptyDir:
          medium: Memory
      - name: local
        emptyDir:
          medium: Memory
