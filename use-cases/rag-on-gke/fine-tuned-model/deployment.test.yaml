apiVersion: apps/v1
kind: Deployment
metadata:
  name: fine-tuned-model-deployment
  namespace: ml-serve-fine-tuned-model
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: fine-tuned-model
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        gke-gcsfuse/volumes: "true"
        gke-gcsfuse/memory-limit: 10Gi
        gke-gcsfuse/memory-request: 4Gi
      labels:
        app: fine-tuned-model
    spec:
      containers:
      - args:
        - --model=$(MODEL_ID)
        - --tensor-parallel-size=1
        command:
        - python3
        - -m
        - vllm.entrypoints.api_server
        env:
        - name: MODEL_ID
          value: /data/models/model-gemma2-a100/experiment-a2aa2c3it1 # Absolute path to the model
        image: us-docker.pkg.dev/vertex-ai/vertex-vision-model-garden-dockers/pytorch-vllm-serve:20240220_0936_RC01
        imagePullPolicy: IfNotPresent
        name: inference-server
        resources:
          limits:
            cpu: "2"
            ephemeral-storage: 10Gi
            memory: 7Gi
            nvidia.com/gpu: "1"
          requests:
            cpu: "2"
            ephemeral-storage: 10Gi
            memory: 7Gi
            nvidia.com/gpu: "1"
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /dev/shm
          name: dshm
        - mountPath: /data/models
          name: gcs-fuse
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      tolerations:
      - key: "nvidia.com/gpu"
        operator: "Exists"
        effect: "NoSchedule"
      - key: "cloud.google.com/gke-queued"
        value: "true"
        operator: "Equal"
        effect: "NoSchedule"
      nodeSelector:
        cloud.google.com/gke-accelerator: nvidia-l4 # Any L4 node pool will work
        pool-type: l4-2-sb
      volumes:
      - emptyDir:
          medium: Memory
        name: dshm
      - name: gcs-fuse
        csi:
          driver: gcsfuse.csi.storage.gke.io
          readOnly: true
          volumeAttributes:
            bucketName: <your-bucket-name> # mount the gcs bucket
            mountOptions: "implicit-dirs"
            gcsfuseLoggingSeverity: warning
            fileCacheCapacity: 40Gi
---
apiVersion: v1
kind: Service
metadata:
  name: fine-tuned-model-service
  namespace: ml-serve-fine-tuned-model  # replace with your namespace
spec:
  selector:
    app: fine-tuned-model
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: vllm-openai
#   namespace: _NAMESPACE_  # replace with your namespace
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: vllm-openai
#   template:
#     metadata:
#       labels:
#         app: vllm-openai
#     spec:
#       serviceAccountName: default
#       containers:
#       - name: inference-server
#         image: vllm/vllm-openai:v0.5.3.post1
#         resources:
#           requests:
#             cpu: "2"
#             memory: "25Gi"
#             ephemeral-storage: "25Gi"
#             nvidia.com/gpu: "2"
#           limits:
#             cpu: "2"
#             memory: "25Gi"
#             ephemeral-storage: "25Gi"
#             nvidia.com/gpu: "2"
#         args:
#         - --model=$(MODEL)
#         - --tensor-parallel-size=2
#         env:
#         - name: MODEL
#           value: /data/models/model-gemma2-a100/experiment-a2aa2c3it1
#         - name: VLLM_ATTENTION_BACKEND
#           value: FLASHINFER
#         volumeMounts:
#         - mountPath: /dev/shm
#           name: dshm
#         - name: model-disk
#           mountPath: /data/models
#           readOnly: true
#       volumes:
#       - name: dshm
#         emptyDir:
#             medium: Memory
#       - name: model-disk
#         persistentVolumeClaim:
#           claimName: pvc-model-weights-claim-1024gb-zone-a-ro
#           readOnly: true
#       tolerations:
#       - key: "nvidia.com/gpu"
#         operator: "Exists"
#         effect: "NoSchedule"
#       - key: "cloud.google.com/gke-queued"
#         value: "true"
#         operator: "Equal"
#         effect: "NoSchedule"
#       nodeSelector:
#         cloud.google.com/gke-accelerator: nvidia-l4
#         pool-type: l4-2-sb
